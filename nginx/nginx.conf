# Nginx Configuration for ContratoRápido Production
# Handles SSL termination, static files, and reverse proxy to n8n

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # MIME Types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Security Headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=api:10m rate=60r/m;
    limit_req_zone $binary_remote_addr zone=webhook:10m rate=100r/m;

    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Main Website - contratorapido.app.br
    server {
        listen 80;
        server_name contratorapido.app.br www.contratorapido.app.br;
        
        # Redirect to HTTPS
        return 301 https://contratorapido.app.br$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name www.contratorapido.app.br;
        
        # SSL Certificates (to be configured)
        ssl_certificate /etc/ssl/certs/contratorapido.app.br.crt;
        ssl_certificate_key /etc/ssl/private/contratorapido.app.br.key;
        
        # Redirect www to non-www
        return 301 https://contratorapido.app.br$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name contratorapido.app.br;
        
        # SSL Certificates
        ssl_certificate /etc/ssl/certs/contratorapido.app.br.crt;
        ssl_certificate_key /etc/ssl/private/contratorapido.app.br.key;
        
        # Security Headers (enhanced for main site)
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self' https://wa.me; frame-ancestors 'none';" always;
        
        # Document Root
        root /var/www/contratorapido;
        index index.html index.htm;

        # Static Files Caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }

        # Main website files
        location / {
            try_files $uri $uri/ =404;
            
            # Cache HTML files briefly
            location ~* \.html$ {
                expires 1h;
                add_header Cache-Control "public, must-revalidate";
            }
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # WhatsApp Webhook Proxy to n8n
        location /webhook/whatsapp {
            limit_req zone=webhook burst=50 nodelay;
            
            # Proxy to n8n container
            proxy_pass http://n8n:5678/webhook/whatsapp;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # WhatsApp specific timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 30s;
            
            # Only allow POST for webhook data
            if ($request_method !~ ^(POST|GET)$) {
                return 405;
            }
        }

        # Block access to sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ \.(htaccess|htpasswd|ini|log|sh|sql|conf)$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Custom 404 page
        error_page 404 /404.html;
        location = /404.html {
            internal;
        }

        # Custom 50x pages
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            internal;
        }
    }

    # Admin Interface - admin.contratorapido.app.br
    server {
        listen 80;
        server_name admin.contratorapido.app.br;
        return 301 https://admin.contratorapido.app.br$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name admin.contratorapido.app.br;
        
        # SSL Certificates
        ssl_certificate /etc/ssl/certs/contratorapido.app.br.crt;
        ssl_certificate_key /etc/ssl/private/contratorapido.app.br.key;
        
        # Enhanced Security for Admin
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; frame-ancestors 'none';" always;
        
        # Rate limiting for login attempts
        location /rest/login {
            limit_req zone=login burst=3 nodelay;
            proxy_pass http://n8n:5678;
            include /etc/nginx/proxy_params;
        }
        
        # General API rate limiting
        location /rest/ {
            limit_req zone=api burst=120 nodelay;
            proxy_pass http://n8n:5678;
            include /etc/nginx/proxy_params;
        }

        # Main n8n interface
        location / {
            # Basic authentication (additional security layer)
            # auth_basic "ContratoRápido Admin";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            
            proxy_pass http://n8n:5678;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Extended timeouts for workflow execution
            proxy_connect_timeout 10s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
    }

    # API Endpoint - api.contratorapido.app.br (Future)
    server {
        listen 80;
        server_name api.contratorapido.app.br;
        return 301 https://api.contratorapido.app.br$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name api.contratorapido.app.br;
        
        # SSL Certificates
        ssl_certificate /etc/ssl/certs/contratorapido.app.br.crt;
        ssl_certificate_key /etc/ssl/private/contratorapido.app.br.key;
        
        # API Security Headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header Content-Security-Policy "default-src 'none'; frame-ancestors 'none';" always;
        
        # CORS Headers for API
        add_header Access-Control-Allow-Origin "$http_origin" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
        add_header Access-Control-Allow-Credentials true always;
        
        # Handle preflight requests
        location / {
            if ($request_method = OPTIONS) {
                return 204;
            }
            
            limit_req zone=api burst=60 nodelay;
            
            # Future API gateway or direct n8n webhook routing
            proxy_pass http://n8n:5678/webhook/api;
            include /etc/nginx/proxy_params;
        }
    }

    # Default server (catch-all)
    server {
        listen 80 default_server;
        listen 443 ssl http2 default_server;
        server_name _;
        
        # Self-signed certificate for default server
        ssl_certificate /etc/ssl/certs/default.crt;
        ssl_certificate_key /etc/ssl/private/default.key;
        
        # Return 444 (connection closed) for unrecognized hosts
        return 444;
    }
}

# Proxy parameters file (referenced above)
# Create /etc/nginx/proxy_params with:
# proxy_http_version 1.1;
# proxy_set_header Upgrade $http_upgrade;
# proxy_set_header Connection 'upgrade';
# proxy_set_header Host $host;
# proxy_set_header X-Real-IP $remote_addr;
# proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
# proxy_set_header X-Forwarded-Proto $scheme;
# proxy_cache_bypass $http_upgrade;