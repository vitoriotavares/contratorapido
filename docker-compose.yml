version: '3.8'

services:
  # Redis - Message Queue and Cache
  redis:
    image: redis:7-alpine
    container_name: criador_contrato_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - criador_contrato_network

  # MongoDB - Primary Database
  mongodb:
    image: mongo:7
    container_name: criador_contrato_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=criador_contrato
    command: mongod --replSet rs0 --bind_ip_all
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - criador_contrato_network

  # MongoDB Replica Set Initializer
  mongodb-init:
    image: mongo:7
    container_name: criador_contrato_mongodb_init
    depends_on:
      - mongodb
    environment:
      - MONGO_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    command: >
      mongosh --host mongodb:27017 --username ${MONGO_ROOT_USERNAME} --password ${MONGO_ROOT_PASSWORD} --eval "
        try {
          rs.status();
          print('Replica set already initialized');
        } catch (e) {
          print('Initializing replica set...');
          rs.initiate({
            _id: 'rs0',
            members: [{ _id: 0, host: 'mongodb:27017' }]
          });
          print('Replica set initialized');
        }
      "
    networks:
      - criador_contrato_network

  # n8n Main Process
  n8n:
    image: n8nio/n8n:latest
    container_name: criador_contrato_n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n/workflows:/home/node/.n8n/workflows
    environment:
      # Queue Mode Configuration
      - EXECUTIONS_MODE=queue
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      - QUEUE_BULL_REDIS_PASSWORD=${REDIS_PASSWORD}
      - QUEUE_BULL_REDIS_DB=0
      
      # Database Configuration
      - DB_TYPE=mongodb
      - DB_MONGODB_CONNECTION_URL=mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/criador_contrato?replicaSet=rs0&authSource=admin
      
      # Basic Configuration
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      - N8N_HOST=${N8N_HOST:-localhost}
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      
      # Webhook Configuration
      - WEBHOOK_URL=${WEBHOOK_URL:-http://localhost:5678}
      - N8N_PAYLOAD_SIZE_MAX=16
      
      # Worker Configuration
      - QUEUE_RECOVERY_INTERVAL=30
      - N8N_LOG_LEVEL=info
      
      # Security
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
    networks:
      - criador_contrato_network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:5678/healthz || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # n8n Worker 1
  n8n-worker-1:
    image: n8nio/n8n:latest
    container_name: criador_contrato_n8n_worker_1
    restart: unless-stopped
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      n8n:
        condition: service_healthy
    volumes:
      - n8n_data:/home/node/.n8n:ro
    environment:
      # Queue Mode Configuration
      - EXECUTIONS_MODE=queue
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      - QUEUE_BULL_REDIS_PASSWORD=${REDIS_PASSWORD}
      - QUEUE_BULL_REDIS_DB=0
      
      # Database Configuration  
      - DB_TYPE=mongodb
      - DB_MONGODB_CONNECTION_URL=mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/criador_contrato?replicaSet=rs0&authSource=admin
      
      # Worker Mode
      - N8N_WORKERS_MODE=execute
      - N8N_LOG_LEVEL=info
      
      # Security
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
    command: n8n worker
    networks:
      - criador_contrato_network

  # n8n Worker 2
  n8n-worker-2:
    image: n8nio/n8n:latest
    container_name: criador_contrato_n8n_worker_2
    restart: unless-stopped
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      n8n:
        condition: service_healthy
    volumes:
      - n8n_data:/home/node/.n8n:ro
    environment:
      # Queue Mode Configuration
      - EXECUTIONS_MODE=queue
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      - QUEUE_BULL_REDIS_PASSWORD=${REDIS_PASSWORD}
      - QUEUE_BULL_REDIS_DB=0
      
      # Database Configuration
      - DB_TYPE=mongodb
      - DB_MONGODB_CONNECTION_URL=mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/criador_contrato?replicaSet=rs0&authSource=admin
      
      # Worker Mode
      - N8N_WORKERS_MODE=execute
      - N8N_LOG_LEVEL=info
      
      # Security
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
    command: n8n worker
    networks:
      - criador_contrato_network

  # n8n Worker 3
  n8n-worker-3:
    image: n8nio/n8n:latest
    container_name: criador_contrato_n8n_worker_3
    restart: unless-stopped
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      n8n:
        condition: service_healthy
    volumes:
      - n8n_data:/home/node/.n8n:ro
    environment:
      # Queue Mode Configuration
      - EXECUTIONS_MODE=queue
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      - QUEUE_BULL_REDIS_PASSWORD=${REDIS_PASSWORD}
      - QUEUE_BULL_REDIS_DB=0
      
      # Database Configuration
      - DB_TYPE=mongodb
      - DB_MONGODB_CONNECTION_URL=mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/criador_contrato?replicaSet=rs0&authSource=admin
      
      # Worker Mode
      - N8N_WORKERS_MODE=execute
      - N8N_LOG_LEVEL=info
      
      # Security
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
    command: n8n worker
    networks:
      - criador_contrato_network

volumes:
  redis_data:
    driver: local
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  n8n_data:
    driver: local

networks:
  criador_contrato_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16